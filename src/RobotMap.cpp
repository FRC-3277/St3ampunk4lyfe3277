// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES
#include "RobotMap.h"
#include "LiveWindow/LiveWindow.h"
// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=ALLOCATION
std::shared_ptr<SpeedController> RobotMap::mortarsSpeedController1;
std::shared_ptr<SpeedController> RobotMap::mortarsSpeedController2;
std::shared_ptr<RobotDrive> RobotMap::mortarsRobotDrive21;
// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=ALLOCATION

void RobotMap::init() {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    LiveWindow *lw = LiveWindow::GetInstance();

    mortarsSpeedController1.reset(new Talon(0));
    lw->AddActuator("Mortars", "Speed Controller 1", std::static_pointer_cast<Talon>(mortarsSpeedController1));
    
    mortarsSpeedController2.reset(new Talon(1));
    lw->AddActuator("Mortars", "Speed Controller 2", std::static_pointer_cast<Talon>(mortarsSpeedController2));
    
    mortarsRobotDrive21.reset(new RobotDrive(mortarsSpeedController1, mortarsSpeedController2));
    
    mortarsRobotDrive21->SetSafetyEnabled(true);
        mortarsRobotDrive21->SetExpiration(0.1);
        mortarsRobotDrive21->SetSensitivity(0.5);
        mortarsRobotDrive21->SetMaxOutput(1.0);
        mortarsRobotDrive21->SetInvertedMotor(RobotDrive::kRearLeftMotor, true);

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
}
